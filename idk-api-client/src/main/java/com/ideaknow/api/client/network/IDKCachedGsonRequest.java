package com.ideaknow.api.client.network;

import com.android.volley.Response;

import com.google.gson.Gson;
import com.ideaknow.api.client.ApiCache;
import com.ideaknow.api.client.gateway.IDKVolleyGateway;

/**
 * Volley request parsing Json strings using the Gson deserializer
 */
public class IDKCachedGsonRequest<T> extends IDKGsonRequest<T> {

    private Response.Listener<T> mListener;

    /**
     * Create a new Gson Json-parser request.
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param listener response listener.
     * @param errorListener error listener.
     */
    public IDKCachedGsonRequest(final int method, final Class<T> returnType, final String url,
            final Response.Listener<T> listener, final Response.ErrorListener errorListener) {
        this(method, returnType, url, listener, errorListener, IDKVolleyGateway.IDK_GSON);
    }

    /**
     * Create a new Gson Json-parser request.
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     */
    public IDKCachedGsonRequest(final int method, final Class<T> returnType, final String url,
            final String requestBody, final Response.Listener<T> listener,
            final Response.ErrorListener errorListener) {
        this(method, returnType, url, requestBody, listener, errorListener,
                IDKVolleyGateway.IDK_GSON);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.)
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     */
    public IDKCachedGsonRequest(final int method, final Class<T> returnType, final String url,
            final Response.Listener<T> listener, final Response.ErrorListener errorListener,
            final Gson gson) {
        this(method, returnType, url, null, listener, errorListener, gson);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.)
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     */
    public IDKCachedGsonRequest(final int method, final Class<T> returnType, final String url,
            final String requestBody, final Response.Listener<T> listener,
            final Response.ErrorListener errorListener, final Gson gson) {
        this(method, returnType, url, requestBody, listener, errorListener, gson, Priority.NORMAL);
    }

    /**
     * Create a new Gson Json-parser request with a custom Gson instance (useful for specifying
     * custom date formats, etc.) and a custom request priority.
     * {@link com.android.volley.Request.Priority}
     *
     * @param method the Http method see {@link com.android.volley.Request.Method}
     * @param returnType the .class to be used by Gson (e.g. User.class).
     * @param url request url.
     * @param requestBody a string containing the body of a POST/PUT request, usually Json and
     * generated by Gson.
     * @param listener response listener.
     * @param errorListener error listener.
     * @param gson custom Gson instance.
     * @param priority the priority to set to this request.
     */
    public IDKCachedGsonRequest(final int method, final Class<T> returnType, final String url,
            final String requestBody, final Response.Listener<T> listener,
            final Response.ErrorListener errorListener, final Gson gson, final Priority priority) {
        super(method, returnType, url, requestBody, listener, errorListener, gson, priority);

        mListener = listener;
        mIsCached = true;

        checkCache();
    }

    private void checkCache() {
        Object cachedObject = ApiCache.get(getCacheKey());
        if (cachedObject != null) {
            cancel();
            try {
                mListener.onResponse((T) cachedObject);
            } catch (ClassCastException e) {
                // The object in the cache isn't the appropriate one, just ignore it.
            }
        }
    }
}
